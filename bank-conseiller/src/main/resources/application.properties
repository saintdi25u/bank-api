
spring.application.name=bank-service
server.port = 9000
# Consul
spring.cloud.consul.host=localhost
spring.cloud.consul.discovery.hostname=localhost
spring.cloud.consul.discovery.register-health-check=false
spring.config.import=optional:consul:
# Pg

spring.sql.init.mode=always
spring.datasource.url=jdbc:postgresql://localhost:15432/bank
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database=postgresql
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.cloud.compatibility-verifier.enabled=false
# Add line to execute data.sql file



# resilience4j config
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.conversionservice.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.conversionservice.waitDurationInOpenState=1s
resilience4j.circuitbreaker.instances.conversionservice.failureRateThreshold=10
resilience4j.circuitbreaker.instances.conversionservice.recordExceptions=java.net.ConnectException,org.springframework.web.client.HttpServerErrorException
resilience4j.retry.retry-aspect-order=10
resilience4j.retry.instances.conversionservice.maxAttempts=2
resilience4j.retry.instances.conversionservice.waitDuration=200ms
resilience4j.retry.instances.conversionservice.fail-after-max-attempts=true
# Swagger UI
springfox.documentation.swagger-ui.enabled=true
# keycloak

# keycloak.host=http://localhost:8090
# keycloak.realm=credit
# keycloak.resource=conseiller-service
# keycloak.auth.server-url=${keycloak.host}/realms/${keycloak.realm}/protocol/openid-connect/token
# spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.host}/realms/${keycloak.realm}
# spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
# jwt.auth.converter.resource-id=${keycloak.resource}
# jwt.auth.converter.principal-attribute=preferred_username



